http://rdf.webofcode.org/woc/java.lang.String-valueOf(char[]-int-int)-1 initial offset of the subarray.
http://rdf.webofcode.org/woc/java.lang.String-replaceAll(java.lang.String-java.lang.String)-1 the string to be substituted for each match
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-int-int-int)-1 The top 8 bits of each 16-bit Unicode code unit
http://rdf.webofcode.org/woc/java.lang.String-indexOf(char[]-int-int-java.lang.String-int)-1 offset of the source string.
http://rdf.webofcode.org/woc/java.lang.String-split(java.lang.String) Splits this string around matches of the given <a\n href=\"../util/regex/Pattern.html#sum\">regular expression<\/a>.\n\n <p> This method works as if by invoking the two-argument {@link\n #split(String, int) split} method with the given expression and a limit\n argument of zero.  Trailing empty strings are therefore not included in\n the resulting array.\n\n <p> The string {@code \"boo:and:foo\"}, for example, yields the following\n results with these expressions:\n\n <blockquote><table cellpadding=1 cellspacing=0 summary=\"Split examples showing regex and result\">\n <tr>\n  <th>Regex<\/th>\n  <th>Result<\/th>\n <\/tr>\n <tr><td align=center>:<\/td>\n     <td>{@code { \"boo\", \"and\", \"foo\" }}<\/td><\/tr>\n <tr><td align=center>o<\/td>\n     <td>{@code { \"b\", \"\", \":and:f\" }}<\/td><\/tr>\n <\/table><\/blockquote>\n\n\n @param  regex\n         the delimiting regular expression\n\n @return  the array of strings computed by splitting this string\n          around matches of the given regular expression\n\n @throws  PatternSyntaxException\n          if the regular expression's syntax is invalid\n\n @see java.util.regex.Pattern\n\n @since 1.4\n @spec JSR-51
http://rdf.webofcode.org/woc/java.lang.String-compareTo(java.lang.String)-0 the {@code String} to be compared.
http://rdf.webofcode.org/woc/java.lang.Override Indicates that a method declaration is intended to override a\n method declaration in a supertype. If a method is annotated with\n this annotation type compilers are required to generate an error\n message unless at least one of the following conditions hold:\n\n <ul><li>\n The method does override or implement a method declared in a\n supertype.\n <\/li><li>\n The method has a signature that is override-equivalent to that of\n any public method declared in {@linkplain Object}.\n <\/li><\/ul>\n\n @author  Peter von der Ah&eacute;\n @author  Joshua Bloch\n @jls 9.6.1.4 @Override\n @since 1.5
http://rdf.webofcode.org/woc/java.lang.String-String(char[]-int-int)-1 The initial offset
http://rdf.webofcode.org/woc/java.lang.String-split(java.lang.String-int) Splits this string around matches of the given\n <a href=\"../util/regex/Pattern.html#sum\">regular expression<\/a>.\n\n <p> The array returned by this method contains each substring of this\n string that is terminated by another substring that matches the given\n expression or is terminated by the end of the string.  The substrings in\n the array are in the order in which they occur in this string.  If the\n expression does not match any part of the input then the resulting array\n has just one element, namely this string.\n\n <p> When there is a positive-width match at the beginning of this\n string then an empty leading substring is included at the beginning\n of the resulting array. A zero-width match at the beginning however\n never produces such empty leading substring.\n\n <p> The {@code limit} parameter controls the number of times the\n pattern is applied and therefore affects the length of the resulting\n array.  If the limit <i>n<\/i> is greater than zero then the pattern\n will be applied at most <i>n<\/i>&nbsp;-&nbsp;1 times, the array's\n length will be no greater than <i>n<\/i>, and the array's last entry\n will contain all input beyond the last matched delimiter.  If <i>n<\/i>\n is non-positive then the pattern will be applied as many times as\n possible and the array can have any length.  If <i>n<\/i> is zero then\n the pattern will be applied as many times as possible, the array can\n have any length, and trailing empty strings will be discarded.\n\n <p> The string {@code \"boo:and:foo\"}, for example, yields the\n following results with these parameters:\n\n <blockquote><table cellpadding=1 cellspacing=0 summary=\"Split example showing regex, limit, and result\">\n <tr>\n     <th>Regex<\/th>\n     <th>Limit<\/th>\n     <th>Result<\/th>\n <\/tr>\n <tr><td align=center>:<\/td>\n     <td align=center>2<\/td>\n     <td>{@code { \"boo\", \"and:foo\" }}<\/td><\/tr>\n <tr><td align=center>:<\/td>\n     <td align=center>5<\/td>\n     <td>{@code { \"boo\", \"and\", \"foo\" }}<\/td><\/tr>\n <tr><td align=center>:<\/td>\n     <td align=center>-2<\/td>\n     <td>{@code { \"boo\", \"and\", \"foo\" }}<\/td><\/tr>\n <tr><td align=center>o<\/td>\n     <td align=center>5<\/td>\n     <td>{@code { \"b\", \"\", \":and:f\", \"\", \"\" }}<\/td><\/tr>\n <tr><td align=center>o<\/td>\n     <td align=center>-2<\/td>\n     <td>{@code { \"b\", \"\", \":and:f\", \"\", \"\" }}<\/td><\/tr>\n <tr><td align=center>o<\/td>\n     <td align=center>0<\/td>\n     <td>{@code { \"b\", \"\", \":and:f\" }}<\/td><\/tr>\n <\/table><\/blockquote>\n\n <p> An invocation of this method of the form\n <i>str.<\/i>{@code split(}<i>regex<\/i>{@code ,}&nbsp;<i>n<\/i>{@code )}\n yields the same result as the expression\n\n <blockquote>\n <code>\n {@link java.util.regex.Pattern}.{@link\n java.util.regex.Pattern#compile compile}(<i>regex<\/i>).{@link\n java.util.regex.Pattern#split(java.lang.CharSequence,int) split}(<i>str<\/i>,&nbsp;<i>n<\/i>)\n <\/code>\n <\/blockquote>\n\n\n @param  regex\n         the delimiting regular expression\n\n @param  limit\n         the result threshold, as described above\n\n @return  the array of strings computed by splitting this string\n          around matches of the given regular expression\n\n @throws  PatternSyntaxException\n          if the regular expression's syntax is invalid\n\n @see java.util.regex.Pattern\n\n @since 1.4\n @spec JSR-51
http://rdf.webofcode.org/woc/java.lang.String-valueOf(char[]-int-int) Returns the string representation of a specific subarray of the\n {@code char} array argument.\n <p>\n The {@code offset} argument is the index of the first\n character of the subarray. The {@code count} argument\n specifies the length of the subarray. The contents of the subarray\n are copied; subsequent modification of the character array does not\n affect the returned string.\n\n @param   data     the character array.\n @param   offset   initial offset of the subarray.\n @param   count    length of the subarray.\n @return  a {@code String} that contains the characters of the\n          specified subarray of the character array.\n @exception IndexOutOfBoundsException if {@code offset} is\n          negative, or {@code count} is negative, or\n          {@code offset+count} is larger than\n          {@code data.length}.
http://rdf.webofcode.org/woc/java.lang.String-lastIndexOf(char[]-int-int-char[]-int-int-int)-6 the index to begin searching from.
http://rdf.webofcode.org/woc/java.lang.String-startsWith(java.lang.String-int)-0 the prefix.
http://rdf.webofcode.org/woc/java.lang.String-codePointCount(int-int)-1 the index after the last {@code char} of the text range.
http://rdf.webofcode.org/woc/java.lang.String-startsWith(java.lang.String) Tests if this string starts with the specified prefix.\n\n @param   prefix   the prefix.\n @return  {@code true} if the character sequence represented by the\n          argument is a prefix of the character sequence represented by\n          this string; {@code false} otherwise.\n          Note also that {@code true} will be returned if the\n          argument is an empty string or is equal to this\n          {@code String} object as determined by the\n          {@link #equals(Object)} method.\n @since   1. 0
http://rdf.webofcode.org/woc/java.lang.String-valueOf(char)-0 a {@code char}.
http://rdf.webofcode.org/woc/java.lang.String-indexOf(char[]-int-int-char[]-int-int-int)-4 offset of the target string.
http://rdf.webofcode.org/woc/java.lang.String-getBytes(java.nio.charset.Charset) Encodes this {@code String} into a sequence of bytes using the given\n {@linkplain java.nio.charset.Charset charset}, storing the result into a\n new byte array.\n\n <p> This method always replaces malformed-input and unmappable-character\n sequences with this charset's default replacement byte array.  The\n {@link java.nio.charset.CharsetEncoder} class should be used when more\n control over the encoding process is required.\n\n @param  charset\n         The {@linkplain java.nio.charset.Charset} to be used to encode\n         the {@code String}\n\n @return  The resultant byte array\n\n @since  1.6
http://rdf.webofcode.org/woc/java.lang.String-codePointAt(int)-0 the index to the {@code char} values
http://rdf.webofcode.org/woc/java.lang.String-lastIndexOf(java.lang.String)-0 the substring to search for.
http://rdf.webofcode.org/woc/java.lang.String-regionMatches(int-java.lang.String-int-int)-1 the string argument.
http://rdf.webofcode.org/woc/java.lang.String-indexOf(char[]-int-int-java.lang.String-int)-2 count of the source string.
http://rdf.webofcode.org/woc/java.lang.String-indexOfSupplementary(int-int) Handles (rare) calls of indexOf with a supplementary character.
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-int-int-java.lang.String)-3 The name of a supported {@linkplain java.nio.charset.Charset charset}
http://rdf.webofcode.org/woc/java.lang.String-startsWith(java.lang.String-int)-1 where to begin looking in this string.
http://rdf.webofcode.org/woc/java.lang.String-replaceAll(java.lang.String-java.lang.String)-0 the regular expression to which this string is to be matched
http://rdf.webofcode.org/woc/java.lang.String-compareToIgnoreCase(java.lang.String)-0 the {@code String} to be compared.
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-int-int-java.nio.charset.Charset)-3 The {@linkplain java.nio.charset.Charset charset} to be used to decode the {@code bytes}
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-int-int)-2 The number of bytes to decode
http://rdf.webofcode.org/woc/java.lang.String-getBytes(int-int-byte[]-int) Copies characters from this string into the destination byte array. Each\n byte receives the 8 low-order bits of the corresponding character. The\n eight high-order bits of each character are not copied and do not\n participate in the transfer in any way.\n\n <p> The first character to be copied is at index {@code srcBegin}; the\n last character to be copied is at index {@code srcEnd-1}.  The total\n number of characters to be copied is {@code srcEnd-srcBegin}. The\n characters, converted to bytes, are copied into the subarray of {@code\n dst} starting at index {@code dstBegin} and ending at index:\n\n <blockquote><pre>\n     dstBegin + (srcEnd-srcBegin) - 1\n <\/pre><\/blockquote>\n\n @deprecated  This method does not properly convert characters into\n bytes.  As of JDK&nbsp;1.1, the preferred way to do this is via the\n {@link #getBytes()} method, which uses the platform's default charset.\n\n @param  srcBegin\n         Index of the first character in the string to copy\n\n @param  srcEnd\n         Index after the last character in the string to copy\n\n @param  dst\n         The destination array\n\n @param  dstBegin\n         The start offset in the destination array\n\n @throws  IndexOutOfBoundsException\n          If any of the following is true:\n          <ul>\n            <li> {@code srcBegin} is negative\n            <li> {@code srcBegin} is greater than {@code srcEnd}\n            <li> {@code srcEnd} is greater than the length of this String\n            <li> {@code dstBegin} is negative\n            <li> {@code dstBegin+(srcEnd-srcBegin)} is larger than {@code\n                 dst.length}\n          <\/ul>
http://rdf.webofcode.org/woc/java.lang.String-valueOf(char[]) Returns the string representation of the {@code char} array\n argument. The contents of the character array are copied; subsequent\n modification of the character array does not affect the returned\n string.\n\n @param   data     the character array.\n @return  a {@code String} that contains the characters of the\n          character array.
http://rdf.webofcode.org/woc/java.lang.String-lastIndexOf(java.lang.String) Returns the index within this string of the last occurrence of the\n specified substring.  The last occurrence of the empty string \"\"\n is considered to occur at the index value {@code this.length()}.\n\n <p>The returned index is the largest value <i>k<\/i> for which:\n <blockquote><pre>\n this.startsWith(str, <i>k<\/i>)\n <\/pre><\/blockquote>\n If no such value of <i>k<\/i> exists, then {@code -1} is returned.\n\n @param   str   the substring to search for.\n @return  the index of the last occurrence of the specified substring,\n          or {@code -1} if there is no such occurrence.
http://rdf.webofcode.org/woc/java.lang.String-getBytes(int-int-byte[]-int)-3 The start offset in the destination array
http://rdf.webofcode.org/woc/java.lang.String-subSequence(int-int) Returns a character sequence that is a subsequence of this sequence.\n\n <p> An invocation of this method of the form\n\n <blockquote><pre>\n str.subSequence(begin,&nbsp;end)<\/pre><\/blockquote>\n\n behaves in exactly the same way as the invocation\n\n <blockquote><pre>\n str.substring(begin,&nbsp;end)<\/pre><\/blockquote>\n\n @apiNote\n This method is defined so that the {@code String} class can implement\n the {@link CharSequence} interface.\n\n @param   beginIndex   the begin index, inclusive.\n @param   endIndex     the end index, exclusive.\n @return  the specified subsequence.\n\n @throws  IndexOutOfBoundsException\n          if {@code beginIndex} or {@code endIndex} is negative,\n          if {@code endIndex} is greater than {@code length()},\n          or if {@code beginIndex} is greater than {@code endIndex}\n\n @since 1.4\n @spec JSR-51
http://rdf.webofcode.org/woc/java.lang.String-replaceFirst(java.lang.String-java.lang.String)-1 the string to be substituted for the first match
http://rdf.webofcode.org/woc/java.lang.String-lastIndexOf(char[]-int-int-char[]-int-int-int)-3 the characters being searched for.
http://rdf.webofcode.org/woc/java.lang.String-regionMatches(boolean-int-java.lang.String-int-int) Tests if two string regions are equal.\n <p>\n A substring of this {@code String} object is compared to a substring\n of the argument {@code other}. The result is {@code true} if these\n substrings represent character sequences that are the same, ignoring\n case if and only if {@code ignoreCase} is true. The substring of\n this {@code String} object to be compared begins at index\n {@code toffset} and has length {@code len}. The substring of\n {@code other} to be compared begins at index {@code ooffset} and\n has length {@code len}. The result is {@code false} if and only if\n at least one of the following is true:\n <ul><li>{@code toffset} is negative.\n <li>{@code ooffset} is negative.\n <li>{@code toffset+len} is greater than the length of this\n {@code String} object.\n <li>{@code ooffset+len} is greater than the length of the other\n argument.\n <li>{@code ignoreCase} is {@code false} and there is some nonnegative\n integer <i>k<\/i> less than {@code len} such that:\n <blockquote><pre>\n this.charAt(toffset+k) != other.charAt(ooffset+k)\n <\/pre><\/blockquote>\n <li>{@code ignoreCase} is {@code true} and there is some nonnegative\n integer <i>k<\/i> less than {@code len} such that:\n <blockquote><pre>\n Character.toLowerCase(this.charAt(toffset+k)) !=\nCharacter.toLowerCase(other.charAt(ooffset+k))\n <\/pre><\/blockquote>\n and:\n <blockquote><pre>\n Character.toUpperCase(this.charAt(toffset+k)) !=\n         Character.toUpperCase(other.charAt(ooffset+k))\n <\/pre><\/blockquote>\n <\/ul>\n\n @param   ignoreCase   if {@code true}, ignore case when comparing\n                       characters.\n @param   toffset      the starting offset of the subregion in this\n                       string.\n @param   other        the string argument.\n @param   ooffset      the starting offset of the subregion in the string\n                       argument.\n @param   len          the number of characters to compare.\n @return  {@code true} if the specified subregion of this string\n          matches the specified subregion of the string argument;\n          {@code false} otherwise. Whether the matching is exact\n          or case insensitive depends on the {@code ignoreCase}\n          argument.
http://rdf.webofcode.org/woc/java.lang.String-join(java.lang.CharSequence-java.lang.Iterable)-1 an {@code Iterable} that will have its {@code elements} joined together.
http://rdf.webofcode.org/woc/java.lang.String-indexOf(int)-0 a character (Unicode code point).
http://rdf.webofcode.org/woc/java.lang.String-indexOf(int-int)-0 a character (Unicode code point).
http://rdf.webofcode.org/woc/java.lang.String-indexOf(char[]-int-int-char[]-int-int-int)-2 count of the source string.
http://rdf.webofcode.org/woc/java.lang.String-indexOf(java.lang.String) Returns the index within this string of the first occurrence of the\n specified substring.\n\n <p>The returned index is the smallest value <i>k<\/i> for which:\n <blockquote><pre>\n this.startsWith(str, <i>k<\/i>)\n <\/pre><\/blockquote>\n If no such value of <i>k<\/i> exists, then {@code -1} is returned.\n\n @param   str   the substring to search for.\n @return  the index of the first occurrence of the specified substring,\n          or {@code -1} if there is no such occurrence.
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-int-int)-0 The bytes to be decoded into characters
http://rdf.webofcode.org/woc/java.lang.String-substring(int)-0 the beginning index, inclusive.
http://rdf.webofcode.org/woc/java.lang.String-codePointCount(int-int) Returns the number of Unicode code points in the specified text\n range of this {@code String}. The text range begins at the\n specified {@code beginIndex} and extends to the\n {@code char} at index {@code endIndex - 1}. Thus the\n length (in {@code char}s) of the text range is\n {@code endIndex-beginIndex}. Unpaired surrogates within\n the text range count as one code point each.\n\n @param beginIndex the index to the first {@code char} of\n the text range.\n @param endIndex the index after the last {@code char} of\n the text range.\n @return the number of Unicode code points in the specified text\n range\n @exception IndexOutOfBoundsException if the\n {@code beginIndex} is negative, or {@code endIndex}\n is larger than the length of this {@code String}, or\n {@code beginIndex} is larger than {@code endIndex}.\n @since  1.5
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-int-int-java.nio.charset.Charset)-1 The index of the first byte to decode
http://rdf.webofcode.org/woc/java.lang.String-String(int[]-int-int) Allocates a new {@code String} that contains characters from a subarray\n of the <a href=\"Character.html#unicode\">Unicode code point<\/a> array\n argument.  The {@code offset} argument is the index of the first code\n point of the subarray and the {@code count} argument specifies the\n length of the subarray.  The contents of the subarray are converted to\n {@code char}s; subsequent modification of the {@code int} array does not\n affect the newly created string.\n\n @param  codePoints\n         Array that is the source of Unicode code points\n\n @param  offset\n         The initial offset\n\n @param  count\n         The length\n\n @throws  IllegalArgumentException\n          If any invalid Unicode code point is found in {@code\n          codePoints}\n\n @throws  IndexOutOfBoundsException\n          If the {@code offset} and {@code count} arguments index\n          characters outside the bounds of the {@code codePoints} array\n\n @since  1.5
http://rdf.webofcode.org/woc/java.lang.String-hash Cache the hash code for the string 
http://rdf.webofcode.org/woc/java.lang.String-substring(int-int)-0 the beginning index, inclusive.
http://rdf.webofcode.org/woc/java.lang.String-lastIndexOf(int) Returns the index within this string of the last occurrence of\n the specified character. For values of {@code ch} in the\n range from 0 to 0xFFFF (inclusive), the index (in Unicode code\n units) returned is the largest value <i>k<\/i> such that:\n <blockquote><pre>\n this.charAt(<i>k<\/i>) == ch\n <\/pre><\/blockquote>\n is true. For other values of {@code ch}, it is the\n largest value <i>k<\/i> such that:\n <blockquote><pre>\n this.codePointAt(<i>k<\/i>) == ch\n <\/pre><\/blockquote>\n is true.  In either case, if no such character occurs in this\n string, then {@code -1} is returned.  The\n {@code String} is searched backwards starting at the last\n character.\n\n @param   ch   a character (Unicode code point).\n @return  the index of the last occurrence of the character in the\n          character sequence represented by this object, or\n          {@code -1} if the character does not occur.
http://rdf.webofcode.org/woc/java.lang.String-getChars(char[]-int) Copy characters from this string into dst starting at dstBegin.\n This method doesn't perform any range checking.
http://rdf.webofcode.org/woc/java.lang.String-charAt(int)-0 the index of the {@code char} value.
http://rdf.webofcode.org/woc/java.lang.String-codePointAt(int) Returns the character (Unicode code point) at the specified\n index. The index refers to {@code char} values\n (Unicode code units) and ranges from {@code 0} to\n {@link #length()}{@code  - 1}.\n\n <p> If the {@code char} value specified at the given index\n is in the high-surrogate range, the following index is less\n than the length of this {@code String}, and the\n {@code char} value at the following index is in the\n low-surrogate range, then the supplementary code point\n corresponding to this surrogate pair is returned. Otherwise,\n the {@code char} value at the given index is returned.\n\n @param      index the index to the {@code char} values\n @return     the code point value of the character at the\n             {@code index}\n @exception  IndexOutOfBoundsException  if the {@code index}\n             argument is negative or not less than the length of this\n             string.\n @since      1.5
http://rdf.webofcode.org/woc/com.example.Pair-getFirst() Returns value of first\n @return
http://rdf.webofcode.org/woc/java.lang.String-isEmpty() Returns {@code true} if, and only if, {@link #length()} is {@code 0}.\n\n @return {@code true} if {@link #length()} is {@code 0}, otherwise\n {@code false}\n\n @since 1.6
http://rdf.webofcode.org/woc/java.lang.String-split(java.lang.String)-0 the delimiting regular expression
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-int-int-int)-0 The bytes to be converted to characters
http://rdf.webofcode.org/woc/java.lang.String-substring(int-int) Returns a string that is a substring of this string. The\n substring begins at the specified {@code beginIndex} and\n extends to the character at index {@code endIndex - 1}.\n Thus the length of the substring is {@code endIndex-beginIndex}.\n <p>\n Examples:\n <blockquote><pre>\n \"hamburger\".substring(4, 8) returns \"urge\"\n \"smiles\".substring(1, 5) returns \"mile\"\n <\/pre><\/blockquote>\n\n @param      beginIndex   the beginning index, inclusive.\n @param      endIndex     the ending index, exclusive.\n @return     the specified substring.\n @exception  IndexOutOfBoundsException  if the\n             {@code beginIndex} is negative, or\n             {@code endIndex} is larger than the length of\n             this {@code String} object, or\n             {@code beginIndex} is larger than\n             {@code endIndex}.
http://rdf.webofcode.org/woc/java.lang.String-substring(int-int)-1 the ending index, exclusive.
http://rdf.webofcode.org/woc/java.lang.String-indexOf(char[]-int-int-char[]-int-int-int)-3 the characters being searched for.
http://rdf.webofcode.org/woc/com.example.Pair-getSecond() Returns value of second\n @return
http://rdf.webofcode.org/woc/java.lang.String-contains(java.lang.CharSequence)-0 the sequence to search for
http://rdf.webofcode.org/woc/java.lang.String-value The value is used for character storage. 
http://rdf.webofcode.org/woc/java.lang.String-String() Initializes a newly created {@code String} object so that it represents\n an empty character sequence.  Note that use of this constructor is\n unnecessary since Strings are immutable.
http://rdf.webofcode.org/woc/java.lang.String-regionMatches(boolean-int-java.lang.String-int-int)-2 the string argument.
http://rdf.webofcode.org/woc/java.lang.String-codePointBefore(int)-0 the index following the code point that should be returned
http://rdf.webofcode.org/woc/java.lang.String-regionMatches(int-java.lang.String-int-int)-0 the starting offset of the subregion in this string.
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-java.lang.String)-1 The name of a supported {@linkplain java.nio.charset.Charset charset}
http://rdf.webofcode.org/woc/java.lang.String-join(java.lang.CharSequence-java.lang.CharSequence[])-0 the delimiter that separates each element
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-int) Allocates a new {@code String} containing characters constructed from\n an array of 8-bit integer values. Each character <i>c<\/i>in the\n resulting string is constructed from the corresponding component\n <i>b<\/i> in the byte array such that:\n\n <blockquote><pre>\n     <b><i>c<\/i><\/b> == (char)(((hibyte &amp; 0xff) &lt;&lt; 8)\n                         | (<b><i>b<\/i><\/b> &amp; 0xff))\n <\/pre><\/blockquote>\n\n @deprecated  This method does not properly convert bytes into\n characters.  As of JDK&nbsp;1.1, the preferred way to do this is via the\n {@code String} constructors that take a {@link\n java.nio.charset.Charset}, charset name, or that use the platform's\n default charset.\n\n @param  ascii\n         The bytes to be converted to characters\n\n @param  hibyte\n         The top 8 bits of each 16-bit Unicode code unit\n\n @see  #String(byte[], int, int, java.lang.String)\n @see  #String(byte[], int, int, java.nio.charset.Charset)\n @see  #String(byte[], int, int)\n @see  #String(byte[], java.lang.String)\n @see  #String(byte[], java.nio.charset.Charset)\n @see  #String(byte[])
http://rdf.webofcode.org/woc/java.lang.String-format(java.lang.String-java.lang.Object[])-0 A <a href=\"../util/Formatter.html#syntax\">format string<\/a>
http://rdf.webofcode.org/woc/java.lang.String-regionMatches(int-java.lang.String-int-int)-2 the starting offset of the subregion in the string argument.
http://rdf.webofcode.org/woc/java.lang.String-replace(java.lang.CharSequence-java.lang.CharSequence) Replaces each substring of this string that matches the literal target\n sequence with the specified literal replacement sequence. The\n replacement proceeds from the beginning of the string to the end, for\n example, replacing \"aa\" with \"b\" in the string \"aaa\" will result in\n \"ba\" rather than \"ab\".\n\n @param  target The sequence of char values to be replaced\n @param  replacement The replacement sequence of char values\n @return  The resulting string\n @since 1.5
http://rdf.webofcode.org/woc/java.lang.String-endsWith(java.lang.String)-0 the suffix.
http://rdf.webofcode.org/woc/java.lang.String-toLowerCase(java.util.Locale) Converts all of the characters in this {@code String} to lower\n case using the rules of the given {@code Locale}.  Case mapping is based\n on the Unicode Standard version specified by the {@link java.lang.Character Character}\n class. Since case mappings are not always 1:1 char mappings, the resulting\n {@code String} may be a different length than the original {@code String}.\n <p>\n Examples of lowercase  mappings are in the following table:\n <table border=\"1\" summary=\"Lowercase mapping examples showing language code of locale, upper case, lower case, and description\">\n <tr>\n   <th>Language Code of Locale<\/th>\n   <th>Upper Case<\/th>\n   <th>Lower Case<\/th>\n   <th>Description<\/th>\n <\/tr>\n <tr>\n   <td>tr (Turkish)<\/td>\n   <td>&#92;u0130<\/td>\n   <td>&#92;u0069<\/td>\n   <td>capital letter I with dot above -&gt; small letter i<\/td>\n <\/tr>\n <tr>\n   <td>tr (Turkish)<\/td>\n   <td>&#92;u0049<\/td>\n   <td>&#92;u0131<\/td>\n   <td>capital letter I -&gt; small letter dotless i <\/td>\n <\/tr>\n <tr>\n   <td>(all)<\/td>\n   <td>French Fries<\/td>\n   <td>french fries<\/td>\n   <td>lowercased all chars in String<\/td>\n <\/tr>\n <tr>\n   <td>(all)<\/td>\n   <td><img src=\"doc-files/capiota.gif\" alt=\"capiota\"><img src=\"doc-files/capchi.gif\" alt=\"capchi\">\n       <img src=\"doc-files/captheta.gif\" alt=\"captheta\"><img src=\"doc-files/capupsil.gif\" alt=\"capupsil\">\n       <img src=\"doc-files/capsigma.gif\" alt=\"capsigma\"><\/td>\n   <td><img src=\"doc-files/iota.gif\" alt=\"iota\"><img src=\"doc-files/chi.gif\" alt=\"chi\">\n       <img src=\"doc-files/theta.gif\" alt=\"theta\"><img src=\"doc-files/upsilon.gif\" alt=\"upsilon\">\n       <img src=\"doc-files/sigma1.gif\" alt=\"sigma\"><\/td>\n   <td>lowercased all chars in String<\/td>\n <\/tr>\n <\/table>\n\n @param locale use the case transformation rules for this locale\n @return the {@code String}, converted to lowercase.\n @see     java.lang.String#toLowerCase()\n @see     java.lang.String#toUpperCase()\n @see     java.lang.String#toUpperCase(Locale)\n @since   1.1
http://rdf.webofcode.org/woc/java.lang.String-valueOf(boolean)-0 a {@code boolean}.
http://rdf.webofcode.org/woc/java.lang.String-hashCode() Returns a hash code for this string. The hash code for a\n {@code String} object is computed as\n <blockquote><pre>\n s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]\n <\/pre><\/blockquote>\n using {@code int} arithmetic, where {@code s[i]} is the\n <i>i<\/i>th character of the string, {@code n} is the length of\n the string, and {@code ^} indicates exponentiation.\n (The hash value of the empty string is zero.)\n\n @return  a hash code value for this object.
http://rdf.webofcode.org/woc/java.lang.String-lastIndexOf(char[]-int-int-char[]-int-int-int)-0 the characters being searched.
http://rdf.webofcode.org/woc/java.lang.String-String(java.lang.StringBuilder) Allocates a new string that contains the sequence of characters\n currently contained in the string builder argument. The contents of the\n string builder are copied; subsequent modification of the string builder\n does not affect the newly created string.\n\n <p> This constructor is provided to ease migration to {@code\n StringBuilder}. Obtaining a string from a string builder via the {@code\n toString} method is likely to run faster and is generally preferred.\n\n @param   builder\n          A {@code StringBuilder}\n\n @since  1.5
http://rdf.webofcode.org/woc/java.lang.String-indexOf(char[]-int-int-java.lang.String-int) Code shared by String and AbstractStringBuilder to do searches. The\n source is the character array being searched, and the target\n is the string being searched for.\n\n @param   source       the characters being searched.\n @param   sourceOffset offset of the source string.\n @param   sourceCount  count of the source string.\n @param   target       the characters being searched for.\n @param   fromIndex    the index to begin searching from.
http://rdf.webofcode.org/woc/java.lang.String-getBytes() Encodes this {@code String} into a sequence of bytes using the\n platform's default charset, storing the result into a new byte array.\n\n <p> The behavior of this method when this string cannot be encoded in\n the default charset is unspecified.  The {@link\n java.nio.charset.CharsetEncoder} class should be used when more control\n over the encoding process is required.\n\n @return  The resultant byte array\n\n @since      JDK1.1
http://rdf.webofcode.org/woc/java.lang.String-String(java.lang.StringBuilder)-0 A {@code StringBuilder}
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-int-int-int)-3 The length
http://rdf.webofcode.org/woc/java.lang.String-format(java.util.Locale-java.lang.String-java.lang.Object[]) Returns a formatted string using the specified locale, format string,\n and arguments.\n\n @param  l\n         The {@linkplain java.util.Locale locale} to apply during\n         formatting.  If {@code l} is {@code null} then no localization\n         is applied.\n\n @param  format\n         A <a href=\"../util/Formatter.html#syntax\">format string<\/a>\n\n @param  args\n         Arguments referenced by the format specifiers in the format\n         string.  If there are more arguments than format specifiers, the\n         extra arguments are ignored.  The number of arguments is\n         variable and may be zero.  The maximum number of arguments is\n         limited by the maximum dimension of a Java array as defined by\n         <cite>The Java&trade; Virtual Machine Specification<\/cite>.\n         The behaviour on a\n         {@code null} argument depends on the\n         <a href=\"../util/Formatter.html#syntax\">conversion<\/a>.\n\n @throws  java.util.IllegalFormatException\n          If a format string contains an illegal syntax, a format\n          specifier that is incompatible with the given arguments,\n          insufficient arguments given the format string, or other\n          illegal conditions.  For specification of all possible\n          formatting errors, see the <a\n          href=\"../util/Formatter.html#detail\">Details<\/a> section of the\n          formatter class specification\n\n @return  A formatted string\n\n @see  java.util.Formatter\n @since  1.5
http://rdf.webofcode.org/woc/com.example.Pair-setSecond(T) Sets new value of second\n @param
http://rdf.webofcode.org/woc/java.lang.String-lastIndexOf(char[]-int-int-java.lang.String-int) Code shared by String and AbstractStringBuilder to do searches. The\n source is the character array being searched, and the target\n is the string being searched for.\n\n @param   source       the characters being searched.\n @param   sourceOffset offset of the source string.\n @param   sourceCount  count of the source string.\n @param   target       the characters being searched for.\n @param   fromIndex    the index to begin searching from.
http://rdf.webofcode.org/woc/java.lang.String-indexOf(char[]-int-int-char[]-int-int-int)-1 offset of the source string.
http://rdf.webofcode.org/woc/java.lang.String-lastIndexOf(char[]-int-int-char[]-int-int-int) Code shared by String and StringBuffer to do searches. The\n source is the character array being searched, and the target\n is the string being searched for.\n\n @param   source       the characters being searched.\n @param   sourceOffset offset of the source string.\n @param   sourceCount  count of the source string.\n @param   target       the characters being searched for.\n @param   targetOffset offset of the target string.\n @param   targetCount  count of the target string.\n @param   fromIndex    the index to begin searching from.
http://rdf.webofcode.org/woc/java.lang.String-String(int[]-int-int)-0 Array that is the source of Unicode code points
http://rdf.webofcode.org/woc/java.lang.String-valueOf(float) Returns the string representation of the {@code float} argument.\n <p>\n The representation is exactly the one returned by the\n {@code Float.toString} method of one argument.\n\n @param   f   a {@code float}.\n @return  a string representation of the {@code float} argument.\n @see     java.lang.Float#toString(float)
http://rdf.webofcode.org/woc/java.lang.String-lastIndexOf(char[]-int-int-char[]-int-int-int)-2 count of the source string.
http://rdf.webofcode.org/woc/java.lang.String-lastIndexOf(int-int)-0 a character (Unicode code point).
http://rdf.webofcode.org/woc/java.lang.String-indexOf(char[]-int-int-char[]-int-int-int) Code shared by String and StringBuffer to do searches. The\n source is the character array being searched, and the target\n is the string being searched for.\n\n @param   source       the characters being searched.\n @param   sourceOffset offset of the source string.\n @param   sourceCount  count of the source string.\n @param   target       the characters being searched for.\n @param   targetOffset offset of the target string.\n @param   targetCount  count of the target string.\n @param   fromIndex    the index to begin searching from.
http://rdf.webofcode.org/woc/java.lang.String-join(java.lang.CharSequence-java.lang.Iterable) Returns a new {@code String} composed of copies of the\n {@code CharSequence elements} joined together with a copy of the\n specified {@code delimiter}.\n\n <blockquote>For example,\n <pre>{@code\n     List<String> strings = new LinkedList<>();\n     strings.add(\"Java\");strings.add(\"is\");\n     strings.add(\"cool\");\n     String message = String.join(\" \", strings);\n     //message returned is: \"Java is cool\"\n\n     Set<String> strings = new LinkedHashSet<>();\n     strings.add(\"Java\"); strings.add(\"is\");\n     strings.add(\"very\"); strings.add(\"cool\");\n     String message = String.join(\"-\", strings);\n     //message returned is: \"Java-is-very-cool\"\n }<\/pre><\/blockquote>\n\n Note that if an individual element is {@code null}, then {@code \"null\"} is added.\n\n @param  delimiter a sequence of characters that is used to separate each\n         of the {@code elements} in the resulting {@code String}\n @param  elements an {@code Iterable} that will have its {@code elements}\n         joined together.\n\n @return a new {@code String} that is composed from the {@code elements}\n         argument\n\n @throws NullPointerException If {@code delimiter} or {@code elements}\n         is {@code null}\n\n @see    #join(CharSequence,CharSequence...)\n @see    java.util.StringJoiner\n @since 1.8
http://rdf.webofcode.org/woc/java.lang.String-trim() Returns a string whose value is this string, with any leading and trailing\n whitespace removed.\n <p>\n If this {@code String} object represents an empty character\n sequence, or the first and last characters of character sequence\n represented by this {@code String} object both have codes\n greater than {@code '\\u005Cu0020'} (the space character), then a\n reference to this {@code String} object is returned.\n <p>\n Otherwise, if there is no character with a code greater than\n {@code '\\u005Cu0020'} in the string, then a\n {@code String} object representing an empty string is\n returned.\n <p>\n Otherwise, let <i>k<\/i> be the index of the first character in the\n string whose code is greater than {@code '\\u005Cu0020'}, and let\n <i>m<\/i> be the index of the last character in the string whose code\n is greater than {@code '\\u005Cu0020'}. A {@code String}\n object is returned, representing the substring of this string that\n begins with the character at index <i>k<\/i> and ends with the\n character at index <i>m<\/i>-that is, the result of\n {@code this.substring(k, m + 1)}.\n <p>\n This method may be used to trim whitespace (as defined above) from\n the beginning and end of a string.\n\n @return  A string whose value is this string, with any leading and trailing white\n          space removed, or this string if it has no leading or\n          trailing white space.
http://rdf.webofcode.org/woc/java.lang.String-getChars(int-int-char[]-int)-1 index after the last character in the string to copy.
http://rdf.webofcode.org/woc/java.lang.String-subSequence(int-int)-0 the begin index, inclusive.
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-int-int) Constructs a new {@code String} by decoding the specified subarray of\n bytes using the platform's default charset.  The length of the new\n {@code String} is a function of the charset, and hence may not be equal\n to the length of the subarray.\n\n <p> The behavior of this constructor when the given bytes are not valid\n in the default charset is unspecified.  The {@link\n java.nio.charset.CharsetDecoder} class should be used when more control\n over the decoding process is required.\n\n @param  bytes\n         The bytes to be decoded into characters\n\n @param  offset\n         The index of the first byte to decode\n\n @param  length\n         The number of bytes to decode\n\n @throws  IndexOutOfBoundsException\n          If the {@code offset} and the {@code length} arguments index\n          characters outside the bounds of the {@code bytes} array\n\n @since  JDK1.1
http://rdf.webofcode.org/woc/java.lang.String-regionMatches(int-java.lang.String-int-int)-3 the number of characters to compare.
http://rdf.webofcode.org/woc/java.lang.String-offsetByCodePoints(int-int)-1 the offset in code points
http://rdf.webofcode.org/woc/java.lang.String-valueOf(boolean) Returns the string representation of the {@code boolean} argument.\n\n @param   b   a {@code boolean}.\n @return  if the argument is {@code true}, a string equal to\n          {@code \"true\"} is returned; otherwise, a string equal to\n          {@code \"false\"} is returned.
http://rdf.webofcode.org/woc/java.lang.String-concat(java.lang.String) Concatenates the specified string to the end of this string.\n <p>\n If the length of the argument string is {@code 0}, then this\n {@code String} object is returned. Otherwise, a\n {@code String} object is returned that represents a character\n sequence that is the concatenation of the character sequence\n represented by this {@code String} object and the character\n sequence represented by the argument string.<p>\n Examples:\n <blockquote><pre>\n \"cares\".concat(\"s\") returns \"caress\"\n \"to\".concat(\"get\").concat(\"her\") returns \"together\"\n <\/pre><\/blockquote>\n\n @param   str   the {@code String} that is concatenated to the end\n                of this {@code String}.\n @return  a string that represents the concatenation of this object's\n          characters followed by the string argument's characters.
http://rdf.webofcode.org/woc/java.lang.String-replaceFirst(java.lang.String-java.lang.String) Replaces the first substring of this string that matches the given <a\n href=\"../util/regex/Pattern.html#sum\">regular expression<\/a> with the\n given replacement.\n\n <p> An invocation of this method of the form\n <i>str<\/i>{@code .replaceFirst(}<i>regex<\/i>{@code ,} <i>repl<\/i>{@code )}\n yields exactly the same result as the expression\n\n <blockquote>\n <code>\n {@link java.util.regex.Pattern}.{@link\n java.util.regex.Pattern#compile compile}(<i>regex<\/i>).{@link\n java.util.regex.Pattern#matcher(java.lang.CharSequence) matcher}(<i>str<\/i>).{@link\n java.util.regex.Matcher#replaceFirst replaceFirst}(<i>repl<\/i>)\n <\/code>\n <\/blockquote>\n\n<p>\n Note that backslashes ({@code \\}) and dollar signs ({@code $}) in the\n replacement string may cause the results to be different than if it were\n being treated as a literal replacement string; see\n {@link java.util.regex.Matcher#replaceFirst}.\n Use {@link java.util.regex.Matcher#quoteReplacement} to suppress the special\n meaning of these characters, if desired.\n\n @param   regex\n          the regular expression to which this string is to be matched\n @param   replacement\n          the string to be substituted for the first match\n\n @return  The resulting {@code String}\n\n @throws  PatternSyntaxException\n          if the regular expression's syntax is invalid\n\n @see java.util.regex.Pattern\n\n @since 1.4\n @spec JSR-51
http://rdf.webofcode.org/woc/java.lang.String-lastIndexOf(char[]-int-int-java.lang.String-int)-3 the characters being searched for.
http://rdf.webofcode.org/woc/java.lang.String-charAt(int) Returns the {@code char} value at the\n specified index. An index ranges from {@code 0} to\n {@code length() - 1}. The first {@code char} value of the sequence\n is at index {@code 0}, the next at index {@code 1},\n and so on, as for array indexing.\n\n <p>If the {@code char} value specified by the index is a\n <a href=\"Character.html#unicode\">surrogate<\/a>, the surrogate\n value is returned.\n\n @param      index   the index of the {@code char} value.\n @return     the {@code char} value at the specified index of this string.\n             The first {@code char} value is at index {@code 0}.\n @exception  IndexOutOfBoundsException  if the {@code index}\n             argument is negative or not less than the length of this\n             string.
http://rdf.webofcode.org/woc/java.lang.String-contentEquals(java.lang.StringBuffer)-0 The {@code StringBuffer} to compare this {@code String} against
http://rdf.webofcode.org/woc/java.lang.String-copyValueOf(char[]-int-int)-0 the character array.
http://rdf.webofcode.org/woc/java.lang.String-String(int[]-int-int)-2 The length
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-int-int-java.lang.String)-2 The number of bytes to decode
http://rdf.webofcode.org/woc/java.lang.String-lastIndexOf(char[]-int-int-java.lang.String-int)-0 the characters being searched.
http://rdf.webofcode.org/woc/java.lang.String-String(java.lang.StringBuffer) Allocates a new string that contains the sequence of characters\n currently contained in the string buffer argument. The contents of the\n string buffer are copied; subsequent modification of the string buffer\n does not affect the newly created string.\n\n @param  buffer\n         A {@code StringBuffer}
http://rdf.webofcode.org/woc/java.lang.String-String(int[]-int-int)-1 The initial offset
http://rdf.webofcode.org/woc/java.lang.String-toString() This object (which is already a string!) is itself returned.\n\n @return  the string itself.
http://rdf.webofcode.org/woc/java.lang.String-valueOf(char) Returns the string representation of the {@code char}\n argument.\n\n @param   c   a {@code char}.\n @return  a string of length {@code 1} containing\n          as its single character the argument {@code c}.
http://rdf.webofcode.org/woc/java.lang.String-getBytes(int-int-byte[]-int)-1 Index after the last character in the string to copy
http://rdf.webofcode.org/woc/java.lang.String-replace(java.lang.CharSequence-java.lang.CharSequence)-1 The replacement sequence of char values
http://rdf.webofcode.org/woc/java.lang.String-offsetByCodePoints(int-int)-0 the index to be offset
http://rdf.webofcode.org/woc/java.lang.String-getBytes(int-int-byte[]-int)-0 Index of the first character in the string to copy
http://rdf.webofcode.org/woc/java.lang.String-indexOf(int-int)-1 the index to start the search from.
http://rdf.webofcode.org/woc/java.lang.String-codePointBefore(int) Returns the character (Unicode code point) before the specified\n index. The index refers to {@code char} values\n (Unicode code units) and ranges from {@code 1} to {@link\n CharSequence#length() length}.\n\n <p> If the {@code char} value at {@code (index - 1)}\n is in the low-surrogate range, {@code (index - 2)} is not\n negative, and the {@code char} value at {@code (index -\n 2)} is in the high-surrogate range, then the\n supplementary code point value of the surrogate pair is\n returned. If the {@code char} value at {@code index -\n 1} is an unpaired low-surrogate or a high-surrogate, the\n surrogate value is returned.\n\n @param     index the index following the code point that should be returned\n @return    the Unicode code point value before the given index.\n @exception IndexOutOfBoundsException if the {@code index}\n            argument is less than 1 or greater than the length\n            of this string.\n @since     1.5
http://rdf.webofcode.org/woc/java.lang.String-valueOf(java.lang.Object) Returns the string representation of the {@code Object} argument.\n\n @param   obj   an {@code Object}.\n @return  if the argument is {@code null}, then a string equal to\n          {@code \"null\"}; otherwise, the value of\n          {@code obj.toString()} is returned.\n @see     java.lang.Object#toString()
http://rdf.webofcode.org/woc/java.lang.String-indexOf(char[]-int-int-java.lang.String-int)-0 the characters being searched.
http://rdf.webofcode.org/woc/java.lang.String-replaceFirst(java.lang.String-java.lang.String)-0 the regular expression to which this string is to be matched
http://rdf.webofcode.org/woc/java.lang.String-valueOf(char[]-int-int)-0 the character array.
http://rdf.webofcode.org/woc/com.example.Pair-setFirst(S) Sets new value of first\n @param
http://rdf.webofcode.org/woc/java.lang.String-indexOf(char[]-int-int-java.lang.String-int)-3 the characters being searched for.
http://rdf.webofcode.org/woc/java.lang.String-subSequence(int-int)-1 the end index, exclusive.
http://rdf.webofcode.org/woc/java.lang.String-copyValueOf(char[]) Equivalent to {@link #valueOf(char[])}.\n\n @param   data   the character array.\n @return  a {@code String} that contains the characters of the\n          character array.
http://rdf.webofcode.org/woc/java.lang.String-join(java.lang.CharSequence-java.lang.CharSequence[]) Returns a new String composed of copies of the\n {@code CharSequence elements} joined together with a copy of\n the specified {@code delimiter}.\n\n <blockquote>For example,\n <pre>{@code\n     String message = String.join(\"-\", \"Java\", \"is\", \"cool\");\n     // message returned is: \"Java-is-cool\"\n }<\/pre><\/blockquote>\n\n Note that if an element is null, then {@code \"null\"} is added.\n\n @param  delimiter the delimiter that separates each element\n @param  elements the elements to join together.\n\n @return a new {@code String} that is composed of the {@code elements}\n         separated by the {@code delimiter}\n\n @throws NullPointerException If {@code delimiter} or {@code elements}\n         is {@code null}\n\n @see java.util.StringJoiner\n @since 1.8
http://rdf.webofcode.org/woc/java.lang.String-valueOf(double)-0 a {@code double}.
http://rdf.webofcode.org/woc/java.lang.String-getBytes(java.nio.charset.Charset)-0 The {@linkplain java.nio.charset.Charset} to be used to encode the {@code String}
http://rdf.webofcode.org/woc/java.lang.String-toUpperCase() Converts all of the characters in this {@code String} to upper\n case using the rules of the default locale. This method is equivalent to\n {@code toUpperCase(Locale.getDefault())}.\n <p>\n <b>Note:<\/b> This method is locale sensitive, and may produce unexpected\n results if used for strings that are intended to be interpreted locale\n independently.\n Examples are programming language identifiers, protocol keys, and HTML\n tags.\n For instance, {@code \"title\".toUpperCase()} in a Turkish locale\n returns {@code \"T\\u005Cu0130TLE\"}, where '\\u005Cu0130' is the\n LATIN CAPITAL LETTER I WITH DOT ABOVE character.\n To obtain correct results for locale insensitive strings, use\n {@code toUpperCase(Locale.ROOT)}.\n <p>\n @return  the {@code String}, converted to uppercase.\n @see     java.lang.String#toUpperCase(Locale)
http://rdf.webofcode.org/woc/java.lang.String-getChars(int-int-char[]-int) Copies characters from this string into the destination character\n array.\n <p>\n The first character to be copied is at index {@code srcBegin};\n the last character to be copied is at index {@code srcEnd-1}\n (thus the total number of characters to be copied is\n {@code srcEnd-srcBegin}). The characters are copied into the\n subarray of {@code dst} starting at index {@code dstBegin}\n and ending at index:\n <blockquote><pre>\n     dstBegin + (srcEnd-srcBegin) - 1\n <\/pre><\/blockquote>\n\n @param      srcBegin   index of the first character in the string\n                        to copy.\n @param      srcEnd     index after the last character in the string\n                        to copy.\n @param      dst        the destination array.\n @param      dstBegin   the start offset in the destination array.\n @exception IndexOutOfBoundsException If any of the following\n            is true:\n            <ul><li>{@code srcBegin} is negative.\n            <li>{@code srcBegin} is greater than {@code srcEnd}\n            <li>{@code srcEnd} is greater than the length of this\n                string\n            <li>{@code dstBegin} is negative\n            <li>{@code dstBegin+(srcEnd-srcBegin)} is larger than\n                {@code dst.length}<\/ul>
http://rdf.webofcode.org/woc/java.lang.String-matches(java.lang.String)-0 the regular expression to which this string is to be matched
http://rdf.webofcode.org/woc/java.lang.String-valueOf(long) Returns the string representation of the {@code long} argument.\n <p>\n The representation is exactly the one returned by the\n {@code Long.toString} method of one argument.\n\n @param   l   a {@code long}.\n @return  a string representation of the {@code long} argument.\n @see     java.lang.Long#toString(long)
http://rdf.webofcode.org/woc/java.lang.String-replace(char-char)-0 the old character.
http://rdf.webofcode.org/woc/java.lang.String-toUpperCase(java.util.Locale) Converts all of the characters in this {@code String} to upper\n case using the rules of the given {@code Locale}. Case mapping is based\n on the Unicode Standard version specified by the {@link java.lang.Character Character}\n class. Since case mappings are not always 1:1 char mappings, the resulting\n {@code String} may be a different length than the original {@code String}.\n <p>\n Examples of locale-sensitive and 1:M case mappings are in the following table.\n\n <table border=\"1\" summary=\"Examples of locale-sensitive and 1:M case mappings. Shows Language code of locale, lower case, upper case, and description.\">\n <tr>\n   <th>Language Code of Locale<\/th>\n   <th>Lower Case<\/th>\n   <th>Upper Case<\/th>\n   <th>Description<\/th>\n <\/tr>\n <tr>\n   <td>tr (Turkish)<\/td>\n   <td>&#92;u0069<\/td>\n   <td>&#92;u0130<\/td>\n   <td>small letter i -&gt; capital letter I with dot above<\/td>\n <\/tr>\n <tr>\n   <td>tr (Turkish)<\/td>\n   <td>&#92;u0131<\/td>\n   <td>&#92;u0049<\/td>\n   <td>small letter dotless i -&gt; capital letter I<\/td>\n <\/tr>\n <tr>\n   <td>(all)<\/td>\n   <td>&#92;u00df<\/td>\n   <td>&#92;u0053 &#92;u0053<\/td>\n   <td>small letter sharp s -&gt; two letters: SS<\/td>\n <\/tr>\n <tr>\n   <td>(all)<\/td>\n   <td>Fahrvergn&uuml;gen<\/td>\n   <td>FAHRVERGN&Uuml;GEN<\/td>\n   <td><\/td>\n <\/tr>\n <\/table>\n @param locale use the case transformation rules for this locale\n @return the {@code String}, converted to uppercase.\n @see     java.lang.String#toUpperCase()\n @see     java.lang.String#toLowerCase()\n @see     java.lang.String#toLowerCase(Locale)\n @since   1.1
http://rdf.webofcode.org/woc/java.lang.String-startsWith(java.lang.String-int) Tests if the substring of this string beginning at the\n specified index starts with the specified prefix.\n\n @param   prefix    the prefix.\n @param   toffset   where to begin looking in this string.\n @return  {@code true} if the character sequence represented by the\n          argument is a prefix of the substring of this object starting\n          at index {@code toffset}; {@code false} otherwise.\n          The result is {@code false} if {@code toffset} is\n          negative or greater than the length of this\n          {@code String} object; otherwise the result is the same\n          as the result of the expression\n          <pre>\n          this.substring(toffset).startsWith(prefix)\n          <\/pre>
http://rdf.webofcode.org/woc/java.lang.String-getBytes(java.lang.String)-0 The name of a supported {@linkplain java.nio.charset.Charset charset}
http://rdf.webofcode.org/woc/java.lang.String-indexOf(int) Returns the index within this string of the first occurrence of\n the specified character. If a character with value\n {@code ch} occurs in the character sequence represented by\n this {@code String} object, then the index (in Unicode\n code units) of the first such occurrence is returned. For\n values of {@code ch} in the range from 0 to 0xFFFF\n (inclusive), this is the smallest value <i>k<\/i> such that:\n <blockquote><pre>\n this.charAt(<i>k<\/i>) == ch\n <\/pre><\/blockquote>\n is true. For other values of {@code ch}, it is the\n smallest value <i>k<\/i> such that:\n <blockquote><pre>\n this.codePointAt(<i>k<\/i>) == ch\n <\/pre><\/blockquote>\n is true. In either case, if no such character occurs in this\n string, then {@code -1} is returned.\n\n @param   ch   a character (Unicode code point).\n @return  the index of the first occurrence of the character in the\n          character sequence represented by this object, or\n          {@code -1} if the character does not occur.
http://rdf.webofcode.org/woc/java.lang.String-contentEquals(java.lang.StringBuffer) Compares this string to the specified {@code StringBuffer}.  The result\n is {@code true} if and only if this {@code String} represents the same\n sequence of characters as the specified {@code StringBuffer}. This method\n synchronizes on the {@code StringBuffer}.\n\n @param  sb\n         The {@code StringBuffer} to compare this {@code String} against\n\n @return  {@code true} if this {@code String} represents the same\n          sequence of characters as the specified {@code StringBuffer},\n          {@code false} otherwise\n\n @since  1.4
http://rdf.webofcode.org/woc/java.lang.String-matches(java.lang.String) Tells whether or not this string matches the given <a\n href=\"../util/regex/Pattern.html#sum\">regular expression<\/a>.\n\n <p> An invocation of this method of the form\n <i>str<\/i>{@code .matches(}<i>regex<\/i>{@code )} yields exactly the\n same result as the expression\n\n <blockquote>\n {@link java.util.regex.Pattern}.{@link java.util.regex.Pattern#matches(String,CharSequence)\n matches(<i>regex<\/i>, <i>str<\/i>)}\n <\/blockquote>\n\n @param   regex\n          the regular expression to which this string is to be matched\n\n @return  {@code true} if, and only if, this string matches the\n          given regular expression\n\n @throws  PatternSyntaxException\n          if the regular expression's syntax is invalid\n\n @see java.util.regex.Pattern\n\n @since 1.4\n @spec JSR-51
http://rdf.webofcode.org/woc/java.lang.String-format(java.util.Locale-java.lang.String-java.lang.Object[])-1 A <a href=\"../util/Formatter.html#syntax\">format string<\/a>
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-java.lang.String)-0 The bytes to be decoded into characters
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-int-int-java.lang.String)-1 The index of the first byte to decode
http://rdf.webofcode.org/woc/java.lang.String-format(java.lang.String-java.lang.Object[])-1 Arguments referenced by the format specifiers in the format string. If there are more arguments than format specifiers, the extra arguments are ignored. The number of arguments is variable and may be zero. The maximum number of arguments is limited by the maximum dimension of a Java array as defined by <cite>The Java&trade; Virtual Machine Specification<\/cite>. The behaviour on a {@code null} argument depends on the <a href=\"../util/Formatter.html#syntax\">conversion<\/a>.
http://rdf.webofcode.org/woc/java.lang.String-replace(char-char)-1 the new character.
http://rdf.webofcode.org/woc/java.lang.String-codePointCount(int-int)-0 the index to the first {@code char} of the text range.
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-int)-0 The bytes to be converted to characters
http://rdf.webofcode.org/woc/java.lang.String-regionMatches(boolean-int-java.lang.String-int-int)-1 the starting offset of the subregion in this string.
http://rdf.webofcode.org/woc/java.lang.String-split(java.lang.String-int)-1 the result threshold, as described above
http://rdf.webofcode.org/woc/java.lang.String The {@code String} class represents character strings. All\n string literals in Java programs, such as {@code \"abc\"}, are\n implemented as instances of this class.\n <p>\n Strings are constant; their values cannot be changed after they\n are created. String buffers support mutable strings.\n Because String objects are immutable they can be shared. For example:\n <blockquote><pre>\n     String str = \"abc\";\n <\/pre><\/blockquote><p>\n is equivalent to:\n <blockquote><pre>\n     char data[] = {'a', 'b', 'c'};\n     String str = new String(data);\n <\/pre><\/blockquote><p>\n Here are some more examples of how strings can be used:\n <blockquote><pre>\n     System.out.println(\"abc\");\n     String cde = \"cde\";\n     System.out.println(\"abc\" + cde);\n     String c = \"abc\".substring(2,3);\n     String d = cde.substring(1, 2);\n <\/pre><\/blockquote>\n <p>\n The class {@code String} includes methods for examining\n individual characters of the sequence, for comparing strings, for\n searching strings, for extracting substrings, and for creating a\n copy of a string with all characters translated to uppercase or to\n lowercase. Case mapping is based on the Unicode Standard version\n specified by the {@link java.lang.Character Character} class.\n <p>\n The Java language provides special support for the string\n concatenation operator (&nbsp;+&nbsp;), and for conversion of\n other objects to strings. String concatenation is implemented\n through the {@code StringBuilder}(or {@code StringBuffer})\n class and its {@code append} method.\n String conversions are implemented through the method\n {@code toString}, defined by {@code Object} and\n inherited by all classes in Java. For additional information on\n string concatenation and conversion, see Gosling, Joy, and Steele,\n <i>The Java Language Specification<\/i>.\n\n <p> Unless otherwise noted, passing a <tt>null<\/tt> argument to a constructor\n or method in this class will cause a {@link NullPointerException} to be\n thrown.\n\n <p>A {@code String} represents a string in the UTF-16 format\n in which <em>supplementary characters<\/em> are represented by <em>surrogate\n pairs<\/em> (see the section <a href=\"Character.html#unicode\">Unicode\n Character Representations<\/a> in the {@code Character} class for\n more information).\n Index values refer to {@code char} code units, so a supplementary\n character uses two positions in a {@code String}.\n <p>The {@code String} class provides methods for dealing with\n Unicode code points (i.e., characters), in addition to those for\n dealing with Unicode code units (i.e., {@code char} values).\n\n @author  Lee Boynton\n @author  Arthur van Hoff\n @author  Martin Buchholz\n @author  Ulf Zibis\n @see     java.lang.Object#toString()\n @see     java.lang.StringBuffer\n @see     java.lang.StringBuilder\n @see     java.nio.charset.Charset\n @since   JDK1.0
http://rdf.webofcode.org/woc/java.lang.String-copyValueOf(char[]-int-int)-2 length of the subarray.
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-java.nio.charset.Charset)-1 The {@linkplain java.nio.charset.Charset charset} to be used to decode the {@code bytes}
http://rdf.webofcode.org/woc/java.lang.String-contains(java.lang.CharSequence) Returns true if and only if this string contains the specified\n sequence of char values.\n\n @param s the sequence to search for\n @return true if this string contains {@code s}, false otherwise\n @since 1.5
http://rdf.webofcode.org/woc/java.lang.String-regionMatches(int-java.lang.String-int-int) Tests if two string regions are equal.\n <p>\n A substring of this {@code String} object is compared to a substring\n of the argument other. The result is true if these substrings\n represent identical character sequences. The substring of this\n {@code String} object to be compared begins at index {@code toffset}\n and has length {@code len}. The substring of other to be compared\n begins at index {@code ooffset} and has length {@code len}. The\n result is {@code false} if and only if at least one of the following\n is true:\n <ul><li>{@code toffset} is negative.\n <li>{@code ooffset} is negative.\n <li>{@code toffset+len} is greater than the length of this\n {@code String} object.\n <li>{@code ooffset+len} is greater than the length of the other\n argument.\n <li>There is some nonnegative integer <i>k<\/i> less than {@code len}\n such that:\n {@code this.charAt(toffset + }<i>k<\/i>{@code ) != other.charAt(ooffset + }\n <i>k<\/i>{@code )}\n <\/ul>\n\n @param   toffset   the starting offset of the subregion in this string.\n @param   other     the string argument.\n @param   ooffset   the starting offset of the subregion in the string\n                    argument.\n @param   len       the number of characters to compare.\n @return  {@code true} if the specified subregion of this string\n          exactly matches the specified subregion of the string argument;\n          {@code false} otherwise.
http://rdf.webofcode.org/woc/java.lang.String-String(java.lang.String)-0 A {@code String}
http://rdf.webofcode.org/woc/java.lang.String-toLowerCase(java.util.Locale)-0 use the case transformation rules for this locale
http://rdf.webofcode.org/woc/java.lang.String-format(java.lang.String-java.lang.Object[]) Returns a formatted string using the specified format string and\n arguments.\n\n <p> The locale always used is the one returned by {@link\n java.util.Locale#getDefault() Locale.getDefault()}.\n\n @param  format\n         A <a href=\"../util/Formatter.html#syntax\">format string<\/a>\n\n @param  args\n         Arguments referenced by the format specifiers in the format\n         string.  If there are more arguments than format specifiers, the\n         extra arguments are ignored.  The number of arguments is\n         variable and may be zero.  The maximum number of arguments is\n         limited by the maximum dimension of a Java array as defined by\n         <cite>The Java&trade; Virtual Machine Specification<\/cite>.\n         The behaviour on a\n         {@code null} argument depends on the <a\n         href=\"../util/Formatter.html#syntax\">conversion<\/a>.\n\n @throws  java.util.IllegalFormatException\n          If a format string contains an illegal syntax, a format\n          specifier that is incompatible with the given arguments,\n          insufficient arguments given the format string, or other\n          illegal conditions.  For specification of all possible\n          formatting errors, see the <a\n          href=\"../util/Formatter.html#detail\">Details<\/a> section of the\n          formatter class specification.\n\n @return  A formatted string\n\n @see  java.util.Formatter\n @since  1.5
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-int-int-java.lang.String) Constructs a new {@code String} by decoding the specified subarray of\n bytes using the specified charset.  The length of the new {@code String}\n is a function of the charset, and hence may not be equal to the length\n of the subarray.\n\n <p> The behavior of this constructor when the given bytes are not valid\n in the given charset is unspecified.  The {@link\n java.nio.charset.CharsetDecoder} class should be used when more control\n over the decoding process is required.\n\n @param  bytes\n         The bytes to be decoded into characters\n\n @param  offset\n         The index of the first byte to decode\n\n @param  length\n         The number of bytes to decode\n\n @param  charsetName\n         The name of a supported {@linkplain java.nio.charset.Charset\n         charset}\n\n @throws  UnsupportedEncodingException\n          If the named charset is not supported\n\n @throws  IndexOutOfBoundsException\n          If the {@code offset} and {@code length} arguments index\n          characters outside the bounds of the {@code bytes} array\n\n @since  JDK1.1
http://rdf.webofcode.org/woc/java.lang.String-lastIndexOf(char[]-int-int-java.lang.String-int)-4 the index to begin searching from.
http://rdf.webofcode.org/woc/java.lang.String-String(char[]-int-int) Allocates a new {@code String} that contains characters from a subarray\n of the character array argument. The {@code offset} argument is the\n index of the first character of the subarray and the {@code count}\n argument specifies the length of the subarray. The contents of the\n subarray are copied; subsequent modification of the character array does\n not affect the newly created string.\n\n @param  value\n         Array that is the source of characters\n\n @param  offset\n         The initial offset\n\n @param  count\n         The length\n\n @throws  IndexOutOfBoundsException\n          If the {@code offset} and {@code count} arguments index\n          characters outside the bounds of the {@code value} array
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]) Constructs a new {@code String} by decoding the specified array of bytes\n using the platform's default charset.  The length of the new {@code\n String} is a function of the charset, and hence may not be equal to the\n length of the byte array.\n\n <p> The behavior of this constructor when the given bytes are not valid\n in the default charset is unspecified.  The {@link\n java.nio.charset.CharsetDecoder} class should be used when more control\n over the decoding process is required.\n\n @param  bytes\n         The bytes to be decoded into characters\n\n @since  JDK1.1
http://rdf.webofcode.org/woc/java.lang.SuppressWarnings Indicates that the named compiler warnings should be suppressed in the\n annotated element (and in all program elements contained in the annotated\n element).  Note that the set of warnings suppressed in a given element is\n a superset of the warnings suppressed in all containing elements.  For\n example, if you annotate a class to suppress one warning and annotate a\n method to suppress another, both warnings will be suppressed in the method.\n\n <p>As a matter of style, programmers should always use this annotation\n on the most deeply nested element where it is effective.  If you want to\n suppress a warning in a particular method, you should annotate that\n method rather than its class.\n\n @author Josh Bloch\n @since 1.5\n @jls 4.8 Raw Types\n @jls 4.12.2 Variables of Reference Type\n @jls 5.1.9 Unchecked Conversion\n @jls 5.5.2 Checked Casts and Unchecked Casts\n @jls 9.6.3.5 @SuppressWarnings
http://rdf.webofcode.org/woc/java.lang.String-lastIndexOf(char[]-int-int-java.lang.String-int)-2 count of the source string.
http://rdf.webofcode.org/woc/java.lang.String-regionMatches(boolean-int-java.lang.String-int-int)-3 the starting offset of the subregion in the string argument.
http://rdf.webofcode.org/woc/java.lang.String-compareToIgnoreCase(java.lang.String) Compares two strings lexicographically, ignoring case\n differences. This method returns an integer whose sign is that of\n calling {@code compareTo} with normalized versions of the strings\n where case differences have been eliminated by calling\n {@code Character.toLowerCase(Character.toUpperCase(character))} on\n each character.\n <p>\n Note that this method does <em>not<\/em> take locale into account,\n and will result in an unsatisfactory ordering for certain locales.\n The java.text package provides <em>collators<\/em> to allow\n locale-sensitive ordering.\n\n @param   str   the {@code String} to be compared.\n @return  a negative integer, zero, or a positive integer as the\n          specified String is greater than, equal to, or less\n          than this String, ignoring case considerations.\n @see     java.text.Collator#compare(String, String)\n @since   1.2
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-java.nio.charset.Charset)-0 The bytes to be decoded into characters
http://rdf.webofcode.org/woc/java.lang.String-equalsIgnoreCase(java.lang.String) Compares this {@code String} to another {@code String}, ignoring case\n considerations.  Two strings are considered equal ignoring case if they\n are of the same length and corresponding characters in the two strings\n are equal ignoring case.\n\n <p> Two characters {@code c1} and {@code c2} are considered the same\n ignoring case if at least one of the following is true:\n <ul>\n   <li> The two characters are the same (as compared by the\n        {@code ==} operator)\n   <li> Applying the method {@link\n        java.lang.Character#toUpperCase(char)} to each character\n        produces the same result\n   <li> Applying the method {@link\n        java.lang.Character#toLowerCase(char)} to each character\n        produces the same result\n <\/ul>\n\n @param  anotherString\n         The {@code String} to compare this {@code String} against\n\n @return  {@code true} if the argument is not {@code null} and it\n          represents an equivalent {@code String} ignoring case; {@code\n          false} otherwise\n\n @see  #equals(Object)
http://rdf.webofcode.org/woc/java.lang.String-equals(java.lang.Object) Compares this string to the specified object.  The result is {@code\n true} if and only if the argument is not {@code null} and is a {@code\n String} object that represents the same sequence of characters as this\n object.\n\n @param  anObject\n         The object to compare this {@code String} against\n\n @return  {@code true} if the given object represents a {@code String}\n          equivalent to this string, {@code false} otherwise\n\n @see  #compareTo(String)\n @see  #equalsIgnoreCase(String)
http://rdf.webofcode.org/woc/java.lang.String-lastIndexOf(char[]-int-int-char[]-int-int-int)-4 offset of the target string.
http://rdf.webofcode.org/woc/java.lang.String-replace(java.lang.CharSequence-java.lang.CharSequence)-0 The sequence of char values to be replaced
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-int-int-java.nio.charset.Charset) Constructs a new {@code String} by decoding the specified subarray of\n bytes using the specified {@linkplain java.nio.charset.Charset charset}.\n The length of the new {@code String} is a function of the charset, and\n hence may not be equal to the length of the subarray.\n\n <p> This method always replaces malformed-input and unmappable-character\n sequences with this charset's default replacement string.  The {@link\n java.nio.charset.CharsetDecoder} class should be used when more control\n over the decoding process is required.\n\n @param  bytes\n         The bytes to be decoded into characters\n\n @param  offset\n         The index of the first byte to decode\n\n @param  length\n         The number of bytes to decode\n\n @param  charset\n         The {@linkplain java.nio.charset.Charset charset} to be used to\n         decode the {@code bytes}\n\n @throws  IndexOutOfBoundsException\n          If the {@code offset} and {@code length} arguments index\n          characters outside the bounds of the {@code bytes} array\n\n @since  1.6
http://rdf.webofcode.org/woc/java.lang.String-String(char[]) Allocates a new {@code String} so that it represents the sequence of\n characters currently contained in the character array argument. The\n contents of the character array are copied; subsequent modification of\n the character array does not affect the newly created string.\n\n @param  value\n         The initial value of the string
http://rdf.webofcode.org/woc/java.lang.String-getBytes(java.lang.String) Encodes this {@code String} into a sequence of bytes using the named\n charset, storing the result into a new byte array.\n\n <p> The behavior of this method when this string cannot be encoded in\n the given charset is unspecified.  The {@link\n java.nio.charset.CharsetEncoder} class should be used when more control\n over the encoding process is required.\n\n @param  charsetName\n         The name of a supported {@linkplain java.nio.charset.Charset\n         charset}\n\n @return  The resultant byte array\n\n @throws  UnsupportedEncodingException\n          If the named charset is not supported\n\n @since  JDK1.1
http://rdf.webofcode.org/woc/java.lang.String-equalsIgnoreCase(java.lang.String)-0 The {@code String} to compare this {@code String} against
http://rdf.webofcode.org/woc/java.lang.String-valueOf(java.lang.Object)-0 an {@code Object}.
http://rdf.webofcode.org/woc/java.lang.String-toUpperCase(java.util.Locale)-0 use the case transformation rules for this locale
http://rdf.webofcode.org/woc/java.lang.String-valueOf(char[]-int-int)-2 length of the subarray.
http://rdf.webofcode.org/woc/java.lang.String-lastIndexOf(char[]-int-int-char[]-int-int-int)-1 offset of the source string.
http://rdf.webofcode.org/woc/java.lang.String-lastIndexOf(int)-0 a character (Unicode code point).
http://rdf.webofcode.org/woc/java.lang.String-CASE_INSENSITIVE_ORDER A Comparator that orders {@code String} objects as by\n {@code compareToIgnoreCase}. This comparator is serializable.\n <p>\n Note that this Comparator does <em>not<\/em> take locale into account,\n and will result in an unsatisfactory ordering for certain locales.\n The java.text package provides <em>Collators<\/em> to allow\n locale-sensitive ordering.\n\n @see     java.text.Collator#compare(String, String)\n @since   1.2
http://rdf.webofcode.org/woc/java.lang.String-offsetByCodePoints(int-int) Returns the index within this {@code String} that is\n offset from the given {@code index} by\n {@code codePointOffset} code points. Unpaired surrogates\n within the text range given by {@code index} and\n {@code codePointOffset} count as one code point each.\n\n @param index the index to be offset\n @param codePointOffset the offset in code points\n @return the index within this {@code String}\n @exception IndexOutOfBoundsException if {@code index}\n   is negative or larger then the length of this\n   {@code String}, or if {@code codePointOffset} is positive\n   and the substring starting with {@code index} has fewer\n   than {@code codePointOffset} code points,\n   or if {@code codePointOffset} is negative and the substring\n   before {@code index} has fewer than the absolute value\n   of {@code codePointOffset} code points.\n @since 1.5
http://rdf.webofcode.org/woc/java.lang.String-lastIndexOf(int-int) Returns the index within this string of the last occurrence of\n the specified character, searching backward starting at the\n specified index. For values of {@code ch} in the range\n from 0 to 0xFFFF (inclusive), the index returned is the largest\n value <i>k<\/i> such that:\n <blockquote><pre>\n (this.charAt(<i>k<\/i>) == ch) {@code &&} (<i>k<\/i> &lt;= fromIndex)\n <\/pre><\/blockquote>\n is true. For other values of {@code ch}, it is the\n largest value <i>k<\/i> such that:\n <blockquote><pre>\n (this.codePointAt(<i>k<\/i>) == ch) {@code &&} (<i>k<\/i> &lt;= fromIndex)\n <\/pre><\/blockquote>\n is true. In either case, if no such character occurs in this\n string at or before position {@code fromIndex}, then\n {@code -1} is returned.\n\n <p>All indices are specified in {@code char} values\n (Unicode code units).\n\n @param   ch          a character (Unicode code point).\n @param   fromIndex   the index to start the search from. There is no\n          restriction on the value of {@code fromIndex}. If it is\n          greater than or equal to the length of this string, it has\n          the same effect as if it were equal to one less than the\n          length of this string: this entire string may be searched.\n          If it is negative, it has the same effect as if it were -1:\n          -1 is returned.\n @return  the index of the last occurrence of the character in the\n          character sequence represented by this object that is less\n          than or equal to {@code fromIndex}, or {@code -1}\n          if the character does not occur before that point.
http://rdf.webofcode.org/woc/java.lang.String-indexOf(java.lang.String-int)-0 the substring to search for.
http://rdf.webofcode.org/woc/java.lang.String-lastIndexOf(java.lang.String-int)-1 the index to start the search from.
http://rdf.webofcode.org/woc/java.lang.String-String(byte[])-0 The bytes to be decoded into characters
http://rdf.webofcode.org/woc/java.lang.String-indexOf(char[]-int-int-char[]-int-int-int)-6 the index to begin searching from.
http://rdf.webofcode.org/woc/java.lang.String-substring(int) Returns a string that is a substring of this string. The\n substring begins with the character at the specified index and\n extends to the end of this string. <p>\n Examples:\n <blockquote><pre>\n \"unhappy\".substring(2) returns \"happy\"\n \"Harbison\".substring(3) returns \"bison\"\n \"emptiness\".substring(9) returns \"\" (an empty string)\n <\/pre><\/blockquote>\n\n @param      beginIndex   the beginning index, inclusive.\n @return     the specified substring.\n @exception  IndexOutOfBoundsException  if\n             {@code beginIndex} is negative or larger than the\n             length of this {@code String} object.
http://rdf.webofcode.org/woc/java.lang.String-lastIndexOf(char[]-int-int-char[]-int-int-int)-5 count of the target string.
http://rdf.webofcode.org/woc/java.lang.String-valueOf(float)-0 a {@code float}.
http://rdf.webofcode.org/woc/java.lang.String-valueOf(double) Returns the string representation of the {@code double} argument.\n <p>\n The representation is exactly the one returned by the\n {@code Double.toString} method of one argument.\n\n @param   d   a {@code double}.\n @return  a  string representation of the {@code double} argument.\n @see     java.lang.Double#toString(double)
http://rdf.webofcode.org/woc/java.lang.String-valueOf(long)-0 a {@code long}.
http://rdf.webofcode.org/woc/java.lang.String-replaceAll(java.lang.String-java.lang.String) Replaces each substring of this string that matches the given <a\n href=\"../util/regex/Pattern.html#sum\">regular expression<\/a> with the\n given replacement.\n\n <p> An invocation of this method of the form\n <i>str<\/i>{@code .replaceAll(}<i>regex<\/i>{@code ,} <i>repl<\/i>{@code )}\n yields exactly the same result as the expression\n\n <blockquote>\n <code>\n {@link java.util.regex.Pattern}.{@link\n java.util.regex.Pattern#compile compile}(<i>regex<\/i>).{@link\n java.util.regex.Pattern#matcher(java.lang.CharSequence) matcher}(<i>str<\/i>).{@link\n java.util.regex.Matcher#replaceAll replaceAll}(<i>repl<\/i>)\n <\/code>\n <\/blockquote>\n\n<p>\n Note that backslashes ({@code \\}) and dollar signs ({@code $}) in the\n replacement string may cause the results to be different than if it were\n being treated as a literal replacement string; see\n {@link java.util.regex.Matcher#replaceAll Matcher.replaceAll}.\n Use {@link java.util.regex.Matcher#quoteReplacement} to suppress the special\n meaning of these characters, if desired.\n\n @param   regex\n          the regular expression to which this string is to be matched\n @param   replacement\n          the string to be substituted for each match\n\n @return  The resulting {@code String}\n\n @throws  PatternSyntaxException\n          if the regular expression's syntax is invalid\n\n @see java.util.regex.Pattern\n\n @since 1.4\n @spec JSR-51
http://rdf.webofcode.org/woc/java.lang.String-getChars(int-int-char[]-int)-0 index of the first character in the string to copy.
http://rdf.webofcode.org/woc/java.lang.String-valueOf(char[])-0 the character array.
http://rdf.webofcode.org/woc/java.lang.String-indexOf(java.lang.String-int)-1 the index from which to start the search.
http://rdf.webofcode.org/woc/java.lang.String-contentEquals(java.lang.CharSequence) Compares this string to the specified {@code CharSequence}.  The\n result is {@code true} if and only if this {@code String} represents the\n same sequence of char values as the specified sequence. Note that if the\n {@code CharSequence} is a {@code StringBuffer} then the method\n synchronizes on it.\n\n @param  cs\n         The sequence to compare this {@code String} against\n\n @return  {@code true} if this {@code String} represents the same\n          sequence of char values as the specified sequence, {@code\n          false} otherwise\n\n @since  1.5
http://rdf.webofcode.org/woc/java.lang.String-format(java.util.Locale-java.lang.String-java.lang.Object[])-0 The {@linkplain java.util.Locale locale} to apply during formatting. If {@code l} is {@code null} then no localization is applied.
http://rdf.webofcode.org/woc/java.lang.String-String(char[])-0 The initial value of the string
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-int-int-java.nio.charset.Charset)-2 The number of bytes to decode
http://rdf.webofcode.org/woc/java.lang.String-lastIndexOf(java.lang.String-int)-0 the substring to search for.
http://rdf.webofcode.org/woc/java.lang.String-getChars(int-int-char[]-int)-3 the start offset in the destination array.
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-int-int-java.nio.charset.Charset)-0 The bytes to be decoded into characters
http://rdf.webofcode.org/woc/java.lang.String-replace(char-char) Returns a string resulting from replacing all occurrences of\n {@code oldChar} in this string with {@code newChar}.\n <p>\n If the character {@code oldChar} does not occur in the\n character sequence represented by this {@code String} object,\n then a reference to this {@code String} object is returned.\n Otherwise, a {@code String} object is returned that\n represents a character sequence identical to the character sequence\n represented by this {@code String} object, except that every\n occurrence of {@code oldChar} is replaced by an occurrence\n of {@code newChar}.\n <p>\n Examples:\n <blockquote><pre>\n \"mesquite in your cellar\".replace('e', 'o')\n         returns \"mosquito in your collar\"\n \"the war of baronets\".replace('r', 'y')\n         returns \"the way of bayonets\"\n \"sparring with a purple porpoise\".replace('p', 't')\n         returns \"starring with a turtle tortoise\"\n \"JonL\".replace('q', 'x') returns \"JonL\" (no change)\n <\/pre><\/blockquote>\n\n @param   oldChar   the old character.\n @param   newChar   the new character.\n @return  a string derived from this string by replacing every\n          occurrence of {@code oldChar} with {@code newChar}.
http://rdf.webofcode.org/woc/java.lang.String-lastIndexOf(java.lang.String-int) Returns the index within this string of the last occurrence of the\n specified substring, searching backward starting at the specified index.\n\n <p>The returned index is the largest value <i>k<\/i> for which:\n <blockquote><pre>\n <i>k<\/i> {@code <=} fromIndex {@code &&} this.startsWith(str, <i>k<\/i>)\n <\/pre><\/blockquote>\n If no such value of <i>k<\/i> exists, then {@code -1} is returned.\n\n @param   str         the substring to search for.\n @param   fromIndex   the index to start the search from.\n @return  the index of the last occurrence of the specified substring,\n          searching backward from the specified index,\n          or {@code -1} if there is no such occurrence.
http://rdf.webofcode.org/woc/java.lang.String-indexOf(char[]-int-int-char[]-int-int-int)-5 count of the target string.
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-int-int-int)-2 The initial offset
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-int-int-int) Allocates a new {@code String} constructed from a subarray of an array\n of 8-bit integer values.\n\n <p> The {@code offset} argument is the index of the first byte of the\n subarray, and the {@code count} argument specifies the length of the\n subarray.\n\n <p> Each {@code byte} in the subarray is converted to a {@code char} as\n specified in the method above.\n\n @deprecated This method does not properly convert bytes into characters.\n As of JDK&nbsp;1.1, the preferred way to do this is via the\n {@code String} constructors that take a {@link\n java.nio.charset.Charset}, charset name, or that use the platform's\n default charset.\n\n @param  ascii\n         The bytes to be converted to characters\n\n @param  hibyte\n         The top 8 bits of each 16-bit Unicode code unit\n\n @param  offset\n         The initial offset\n @param  count\n         The length\n\n @throws  IndexOutOfBoundsException\n          If the {@code offset} or {@code count} argument is invalid\n\n @see  #String(byte[], int)\n @see  #String(byte[], int, int, java.lang.String)\n @see  #String(byte[], int, int, java.nio.charset.Charset)\n @see  #String(byte[], int, int)\n @see  #String(byte[], java.lang.String)\n @see  #String(byte[], java.nio.charset.Charset)\n @see  #String(byte[])
http://rdf.webofcode.org/woc/java.lang.String-lastIndexOfSupplementary(int-int) Handles (rare) calls of lastIndexOf with a supplementary character.
http://rdf.webofcode.org/woc/java.lang.String-getBytes(int-int-byte[]-int)-2 The destination array
http://rdf.webofcode.org/woc/java.lang.String-valueOf(int) Returns the string representation of the {@code int} argument.\n <p>\n The representation is exactly the one returned by the\n {@code Integer.toString} method of one argument.\n\n @param   i   an {@code int}.\n @return  a string representation of the {@code int} argument.\n @see     java.lang.Integer#toString(int, int)
http://rdf.webofcode.org/woc/java.lang.String-contentEquals(java.lang.CharSequence)-0 The sequence to compare this {@code String} against
http://rdf.webofcode.org/woc/java.lang.String-String(java.lang.String) Initializes a newly created {@code String} object so that it represents\n the same sequence of characters as the argument; in other words, the\n newly created string is a copy of the argument string. Unless an\n explicit copy of {@code original} is needed, use of this constructor is\n unnecessary since Strings are immutable.\n\n @param  original\n         A {@code String}
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-java.lang.String) Constructs a new {@code String} by decoding the specified array of bytes\n using the specified {@linkplain java.nio.charset.Charset charset}.  The\n length of the new {@code String} is a function of the charset, and hence\n may not be equal to the length of the byte array.\n\n <p> The behavior of this constructor when the given bytes are not valid\n in the given charset is unspecified.  The {@link\n java.nio.charset.CharsetDecoder} class should be used when more control\n over the decoding process is required.\n\n @param  bytes\n         The bytes to be decoded into characters\n\n @param  charsetName\n         The name of a supported {@linkplain java.nio.charset.Charset\n         charset}\n\n @throws  UnsupportedEncodingException\n          If the named charset is not supported\n\n @since  JDK1.1
http://rdf.webofcode.org/woc/java.lang.String-copyValueOf(char[]-int-int)-1 initial offset of the subarray.
http://rdf.webofcode.org/woc/java.lang.String-serialVersionUID use serialVersionUID from JDK 1.0.2 for interoperability 
http://rdf.webofcode.org/woc/java.lang.String-copyValueOf(char[])-0 the character array.
http://rdf.webofcode.org/woc/java.lang.String-indexOf(java.lang.String-int) Returns the index within this string of the first occurrence of the\n specified substring, starting at the specified index.\n\n <p>The returned index is the smallest value <i>k<\/i> for which:\n <blockquote><pre>\n <i>k<\/i> &gt;= fromIndex {@code &&} this.startsWith(str, <i>k<\/i>)\n <\/pre><\/blockquote>\n If no such value of <i>k<\/i> exists, then {@code -1} is returned.\n\n @param   str         the substring to search for.\n @param   fromIndex   the index from which to start the search.\n @return  the index of the first occurrence of the specified substring,\n          starting at the specified index,\n          or {@code -1} if there is no such occurrence.
http://rdf.webofcode.org/woc/java.lang.String-startsWith(java.lang.String)-0 the prefix.
http://rdf.webofcode.org/woc/java.lang.String-String(char[]-int-int)-0 Array that is the source of characters
http://rdf.webofcode.org/woc/java.lang.String-toLowerCase() Converts all of the characters in this {@code String} to lower\n case using the rules of the default locale. This is equivalent to calling\n {@code toLowerCase(Locale.getDefault())}.\n <p>\n <b>Note:<\/b> This method is locale sensitive, and may produce unexpected\n results if used for strings that are intended to be interpreted locale\n independently.\n Examples are programming language identifiers, protocol keys, and HTML\n tags.\n For instance, {@code \"TITLE\".toLowerCase()} in a Turkish locale\n returns {@code \"t\\u005Cu0131tle\"}, where '\\u005Cu0131' is the\n LATIN SMALL LETTER DOTLESS I character.\n To obtain correct results for locale insensitive strings, use\n {@code toLowerCase(Locale.ROOT)}.\n <p>\n @return  the {@code String}, converted to lowercase.\n @see     java.lang.String#toLowerCase(Locale)
http://rdf.webofcode.org/woc/java.lang.String-regionMatches(boolean-int-java.lang.String-int-int)-0 if {@code true}, ignore case when comparing characters.
http://rdf.webofcode.org/woc/java.lang.String-indexOf(char[]-int-int-char[]-int-int-int)-0 the characters being searched.
http://rdf.webofcode.org/woc/java.lang.String-split(java.lang.String-int)-0 the delimiting regular expression
http://rdf.webofcode.org/woc/java.lang.String-equals(java.lang.Object)-0 The object to compare this {@code String} against
http://rdf.webofcode.org/woc/java.lang.String-getChars(int-int-char[]-int)-2 the destination array.
http://rdf.webofcode.org/woc/java.lang.String-toCharArray() Converts this string to a new character array.\n\n @return  a newly allocated character array whose length is the length\n          of this string and whose contents are initialized to contain\n          the character sequence represented by this string.
http://rdf.webofcode.org/woc/java.lang.String-lastIndexOf(char[]-int-int-java.lang.String-int)-1 offset of the source string.
http://rdf.webofcode.org/woc/java.lang.String-endsWith(java.lang.String) Tests if this string ends with the specified suffix.\n\n @param   suffix   the suffix.\n @return  {@code true} if the character sequence represented by the\n          argument is a suffix of the character sequence represented by\n          this object; {@code false} otherwise. Note that the\n          result will be {@code true} if the argument is the\n          empty string or is equal to this {@code String} object\n          as determined by the {@link #equals(Object)} method.
http://rdf.webofcode.org/woc/java.lang.String-indexOf(java.lang.String)-0 the substring to search for.
http://rdf.webofcode.org/woc/java.lang.String-indexOf(int-int) Returns the index within this string of the first occurrence of the\n specified character, starting the search at the specified index.\n <p>\n If a character with value {@code ch} occurs in the\n character sequence represented by this {@code String}\n object at an index no smaller than {@code fromIndex}, then\n the index of the first such occurrence is returned. For values\n of {@code ch} in the range from 0 to 0xFFFF (inclusive),\n this is the smallest value <i>k<\/i> such that:\n <blockquote><pre>\n (this.charAt(<i>k<\/i>) == ch) {@code &&} (<i>k<\/i> &gt;= fromIndex)\n <\/pre><\/blockquote>\n is true. For other values of {@code ch}, it is the\n smallest value <i>k<\/i> such that:\n <blockquote><pre>\n (this.codePointAt(<i>k<\/i>) == ch) {@code &&} (<i>k<\/i> &gt;= fromIndex)\n <\/pre><\/blockquote>\n is true. In either case, if no such character occurs in this\n string at or after position {@code fromIndex}, then\n {@code -1} is returned.\n\n <p>\n There is no restriction on the value of {@code fromIndex}. If it\n is negative, it has the same effect as if it were zero: this entire\n string may be searched. If it is greater than the length of this\n string, it has the same effect as if it were equal to the length of\n this string: {@code -1} is returned.\n\n <p>All indices are specified in {@code char} values\n (Unicode code units).\n\n @param   ch          a character (Unicode code point).\n @param   fromIndex   the index to start the search from.\n @return  the index of the first occurrence of the character in the\n          character sequence represented by this object that is greater\n          than or equal to {@code fromIndex}, or {@code -1}\n          if the character does not occur.
http://rdf.webofcode.org/woc/java.lang.String-copyValueOf(char[]-int-int) Equivalent to {@link #valueOf(char[], int, int)}.\n\n @param   data     the character array.\n @param   offset   initial offset of the subarray.\n @param   count    length of the subarray.\n @return  a {@code String} that contains the characters of the\n          specified subarray of the character array.\n @exception IndexOutOfBoundsException if {@code offset} is\n          negative, or {@code count} is negative, or\n          {@code offset+count} is larger than\n          {@code data.length}.
http://rdf.webofcode.org/woc/java.lang.String-String(java.lang.StringBuffer)-0 A {@code StringBuffer}
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-int-int-java.lang.String)-0 The bytes to be decoded into characters
http://rdf.webofcode.org/woc/java.lang.String-regionMatches(boolean-int-java.lang.String-int-int)-4 the number of characters to compare.
http://rdf.webofcode.org/woc/java.lang.String-String(char[]-int-int)-2 The length
http://rdf.webofcode.org/woc/java.lang.String-valueOf(int)-0 an {@code int}.
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-java.nio.charset.Charset) Constructs a new {@code String} by decoding the specified array of\n bytes using the specified {@linkplain java.nio.charset.Charset charset}.\n The length of the new {@code String} is a function of the charset, and\n hence may not be equal to the length of the byte array.\n\n <p> This method always replaces malformed-input and unmappable-character\n sequences with this charset's default replacement string.  The {@link\n java.nio.charset.CharsetDecoder} class should be used when more control\n over the decoding process is required.\n\n @param  bytes\n         The bytes to be decoded into characters\n\n @param  charset\n         The {@linkplain java.nio.charset.Charset charset} to be used to\n         decode the {@code bytes}\n\n @since  1.6
http://rdf.webofcode.org/woc/java.lang.String-concat(java.lang.String)-0 the {@code String} that is concatenated to the end of this {@code String}.
http://rdf.webofcode.org/woc/java.lang.String$CaseInsensitiveComparator-readResolve() Replaces the de-serialized object. 
http://rdf.webofcode.org/woc/java.lang.String-lastIndexOf(int-int)-1 the index to start the search from. There is no restriction on the value of {@code fromIndex}. If it is greater than or equal to the length of this string, it has the same effect as if it were equal to one less than the length of this string: this entire string may be searched. If it is negative, it has the same effect as if it were -1: -1 is returned.
http://rdf.webofcode.org/woc/java.lang.String-join(java.lang.CharSequence-java.lang.Iterable)-0 a sequence of characters that is used to separate each of the {@code elements} in the resulting {@code String}
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-int)-1 The top 8 bits of each 16-bit Unicode code unit
http://rdf.webofcode.org/woc/java.lang.String-compareTo(java.lang.String) Compares two strings lexicographically.\n The comparison is based on the Unicode value of each character in\n the strings. The character sequence represented by this\n {@code String} object is compared lexicographically to the\n character sequence represented by the argument string. The result is\n a negative integer if this {@code String} object\n lexicographically precedes the argument string. The result is a\n positive integer if this {@code String} object lexicographically\n follows the argument string. The result is zero if the strings\n are equal; {@code compareTo} returns {@code 0} exactly when\n the {@link #equals(Object)} method would return {@code true}.\n <p>\n This is the definition of lexicographic ordering. If two strings are\n different, then either they have different characters at some index\n that is a valid index for both strings, or their lengths are different,\n or both. If they have different characters at one or more index\n positions, let <i>k<\/i> be the smallest such index; then the string\n whose character at position <i>k<\/i> has the smaller value, as\n determined by using the &lt; operator, lexicographically precedes the\n other string. In this case, {@code compareTo} returns the\n difference of the two character values at position {@code k} in\n the two string -- that is, the value:\n <blockquote><pre>\n this.charAt(k)-anotherString.charAt(k)\n <\/pre><\/blockquote>\n If there is no index position at which they differ, then the shorter\n string lexicographically precedes the longer string. In this case,\n {@code compareTo} returns the difference of the lengths of the\n strings -- that is, the value:\n <blockquote><pre>\n this.length()-anotherString.length()\n <\/pre><\/blockquote>\n\n @param   anotherString   the {@code String} to be compared.\n @return  the value {@code 0} if the argument string is equal to\n          this string; a value less than {@code 0} if this string\n          is lexicographically less than the string argument; and a\n          value greater than {@code 0} if this string is\n          lexicographically greater than the string argument.
http://rdf.webofcode.org/woc/java.lang.String-format(java.util.Locale-java.lang.String-java.lang.Object[])-2 Arguments referenced by the format specifiers in the format string. If there are more arguments than format specifiers, the extra arguments are ignored. The number of arguments is variable and may be zero. The maximum number of arguments is limited by the maximum dimension of a Java array as defined by <cite>The Java&trade; Virtual Machine Specification<\/cite>. The behaviour on a {@code null} argument depends on the <a href=\"../util/Formatter.html#syntax\">conversion<\/a>.
http://rdf.webofcode.org/woc/java.lang.String-String(byte[]-int-int)-1 The index of the first byte to decode
http://rdf.webofcode.org/woc/java.lang.String-intern() Returns a canonical representation for the string object.\n <p>\n A pool of strings, initially empty, is maintained privately by the\n class {@code String}.\n <p>\n When the intern method is invoked, if the pool already contains a\n string equal to this {@code String} object as determined by\n the {@link #equals(Object)} method, then the string from the pool is\n returned. Otherwise, this {@code String} object is added to the\n pool and a reference to this {@code String} object is returned.\n <p>\n It follows that for any two strings {@code s} and {@code t},\n {@code s.intern() == t.intern()} is {@code true}\n if and only if {@code s.equals(t)} is {@code true}.\n <p>\n All literal strings and string-valued constant expressions are\n interned. String literals are defined in section 3.10.5 of the\n <cite>The Java&trade; Language Specification<\/cite>.\n\n @return  a string that has the same contents as this string, but is\n          guaranteed to be from a pool of unique strings.
http://rdf.webofcode.org/woc/java.lang.String-length() Returns the length of this string.\n The length is equal to the number of <a href=\"Character.html#unicode\">Unicode\n code units<\/a> in the string.\n\n @return  the length of the sequence of characters represented by this\n          object.
http://rdf.webofcode.org/woc/java.lang.String-join(java.lang.CharSequence-java.lang.CharSequence[])-1 the elements to join together.
http://rdf.webofcode.org/woc/java.lang.String-serialPersistentFields Class String is special cased within the Serialization Stream Protocol.\n\n A String instance is written into an ObjectOutputStream according to\n <a href=\"{@docRoot}/../platform/serialization/spec/output.html\">\n Object Serialization Specification, Section 6.2, \"Stream Elements\"<\/a>
http://rdf.webofcode.org/woc/java.lang.String-indexOf(char[]-int-int-java.lang.String-int)-4 the index to begin searching from.
